{
	"id": "5bcefc91b27803410c8a6cc65ed4abe4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"sygma-solidity/contracts/handlers/HandlerHelpers.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.11;\n\nimport \"../interfaces/IERCHandler.sol\";\n\n/**\n    @title Function used across handler contracts.\n    @author ChainSafe Systems.\n    @notice This contract is intended to be used with the Bridge contract.\n */\ncontract HandlerHelpers is IERCHandler {\n    address public immutable _bridgeAddress;\n\n    // resourceID => token contract address\n    mapping (bytes32 => address) public _resourceIDToTokenContractAddress;\n\n    // token contract address => resourceID\n    mapping (address => bytes32) public _tokenContractAddressToResourceID;\n\n    // token contract address => is whitelisted\n    mapping (address => bool) public _contractWhitelist;\n\n    // token contract address => is burnable\n    mapping (address => bool) public _burnList;\n\n    modifier onlyBridge() {\n        _onlyBridge();\n        _;\n    }\n    \n    /**\n        @param bridgeAddress Contract address of previously deployed Bridge.\n     */\n    constructor(\n        address          bridgeAddress\n    ) public {\n        _bridgeAddress = bridgeAddress;\n    }\n\n    function _onlyBridge() private view {\n        require(msg.sender == _bridgeAddress, \"sender must be bridge contract\");\n    }\n\n    /**\n        @notice First verifies {_resourceIDToContractAddress}[{resourceID}] and\n        {_contractAddressToResourceID}[{contractAddress}] are not already set,\n        then sets {_resourceIDToContractAddress} with {contractAddress},\n        {_contractAddressToResourceID} with {resourceID},\n        and {_contractWhitelist} to true for {contractAddress}.\n        @param resourceID ResourceID to be used when making deposits.\n        @param contractAddress Address of contract to be called when a deposit is made and a deposited is executed.\n     */\n    function setResource(bytes32 resourceID, address contractAddress) external override onlyBridge {\n\n        _setResource(resourceID, contractAddress);\n    }\n\n    /**\n        @notice First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}]\n        to true.\n        @param contractAddress Address of contract to be used when making or executing deposits.\n     */\n    function setBurnable(address contractAddress) external override onlyBridge{\n        _setBurnable(contractAddress);\n    }\n\n    function withdraw(bytes memory data) external virtual override {}\n\n    function _setResource(bytes32 resourceID, address contractAddress) internal {\n        _resourceIDToTokenContractAddress[resourceID] = contractAddress;\n        _tokenContractAddressToResourceID[contractAddress] = resourceID;\n\n        _contractWhitelist[contractAddress] = true;\n    }\n\n    function _setBurnable(address contractAddress) internal {\n        require(_contractWhitelist[contractAddress], \"provided contract is not whitelisted\");\n        _burnList[contractAddress] = true;\n    }\n}\n"
			},
			"sygma-solidity/contracts/interfaces/IERCHandler.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.11;\n\n/**\n    @title Interface to be used with handlers that support ERC20s and ERC721s.\n    @author ChainSafe Systems.\n */\ninterface IERCHandler {\n    /**\n        @notice Correlates {resourceID} with {contractAddress}.\n        @param resourceID ResourceID to be used when making deposits.\n        @param contractAddress Address of contract to be called when a deposit is made and a deposited is executed.\n     */\n    function setResource(bytes32 resourceID, address contractAddress) external;\n    /**\n        @notice Marks {contractAddress} as mintable/burnable.\n        @param contractAddress Address of contract to be used when making or executing deposits.\n     */\n    function setBurnable(address contractAddress) external;\n\n    /**\n        @notice Withdraw funds from ERC safes.\n        @param data ABI-encoded withdrawal params relevant to the handler.\n     */\n    function withdraw(bytes memory data) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"sygma-solidity/contracts/handlers/HandlerHelpers.sol": {
				"HandlerHelpers": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "bridgeAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "_bridgeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_burnList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_contractWhitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "_resourceIDToTokenContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_tokenContractAddressToResourceID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "setBurnable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "resourceID",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "setResource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "ChainSafe Systems.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"bridgeAddress": "Contract address of previously deployed Bridge."
								}
							},
							"setBurnable(address)": {
								"params": {
									"contractAddress": "Address of contract to be used when making or executing deposits."
								}
							},
							"setResource(bytes32,address)": {
								"params": {
									"contractAddress": "Address of contract to be called when a deposit is made and a deposited is executed.",
									"resourceID": "ResourceID to be used when making deposits."
								}
							},
							"withdraw(bytes)": {
								"params": {
									"data": "ABI-encoded withdrawal params relevant to the handler."
								}
							}
						},
						"title": "Function used across handler contracts.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":273:2857  contract HandlerHelpers is IERCHandler {... */\n  mstore(0x40, 0xa0)\n    /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":970:1082  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1062:1075  bridgeAddress */\n  dup1\n    /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1045:1075  _bridgeAddress = bridgeAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":970:1082  constructor(... */\n  pop\n    /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":273:2857  contract HandlerHelpers is IERCHandler {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":273:2857  contract HandlerHelpers is IERCHandler {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":273:2857  contract HandlerHelpers is IERCHandler {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a70d081\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x6a70d081\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7f79bea8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb8fa3736\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc8ba6c87\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x07b7ed99\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0968f264\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0a6d55d8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x318c136e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2170:2290  function setBurnable(address contractAddress) external override onlyBridge{... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2296:2361  function withdraw(bytes memory data) external virtual override {} */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":408:477  mapping (bytes32 => address) public _resourceIDToTokenContractAddress */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":318:357  address public immutable _bridgeAddress */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":755:797  mapping (address => bool) public _burnList */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":652:703  mapping (address => bool) public _contractWhitelist */\n    tag_8:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1774:1928  function setResource(bytes32 resourceID, address contractAddress) external override onlyBridge {... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":528:597  mapping (address => bytes32) public _tokenContractAddressToResourceID */\n    tag_10:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2170:2290  function setBurnable(address contractAddress) external override onlyBridge{... */\n    tag_15:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":836:849  _onlyBridge() */\n      tag_48\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":836:847  _onlyBridge */\n      tag_49\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":836:849  _onlyBridge() */\n      jump\t// in\n    tag_48:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2254:2283  _setBurnable(contractAddress) */\n      tag_51\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2267:2282  contractAddress */\n      dup2\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2254:2266  _setBurnable */\n      tag_52\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2254:2283  _setBurnable(contractAddress) */\n      jump\t// in\n    tag_51:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2170:2290  function setBurnable(address contractAddress) external override onlyBridge{... */\n      pop\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2296:2361  function withdraw(bytes memory data) external virtual override {} */\n    tag_19:\n      pop\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":408:477  mapping (bytes32 => address) public _resourceIDToTokenContractAddress */\n    tag_23:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":318:357  address public immutable _bridgeAddress */\n    tag_27:\n      immutable(\"0x52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021\")\n      dup2\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":755:797  mapping (address => bool) public _burnList */\n    tag_31:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":652:703  mapping (address => bool) public _contractWhitelist */\n    tag_36:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1774:1928  function setResource(bytes32 resourceID, address contractAddress) external override onlyBridge {... */\n    tag_41:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":836:849  _onlyBridge() */\n      tag_55\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":836:847  _onlyBridge */\n      tag_49\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":836:849  _onlyBridge() */\n      jump\t// in\n    tag_55:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1880:1921  _setResource(resourceID, contractAddress) */\n      tag_57\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1893:1903  resourceID */\n      dup3\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1905:1920  contractAddress */\n      dup3\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1880:1892  _setResource */\n      tag_58\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1880:1921  _setResource(resourceID, contractAddress) */\n      jump\t// in\n    tag_57:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1774:1928  function setResource(bytes32 resourceID, address contractAddress) external override onlyBridge {... */\n      pop\n      pop\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":528:597  mapping (address => bytes32) public _tokenContractAddressToResourceID */\n    tag_44:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1088:1212  function _onlyBridge() private view {... */\n    tag_49:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1156:1170  _bridgeAddress */\n      immutable(\"0x52f1a9b320cab38e5da8a8f97989383aab0a49165fc91c737310e4f7e9821021\")\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1142:1170  msg.sender == _bridgeAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1142:1152  msg.sender */\n      caller\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1142:1170  msg.sender == _bridgeAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1134:1205  require(msg.sender == _bridgeAddress, \"sender must be bridge contract\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":1088:1212  function _onlyBridge() private view {... */\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2655:2855  function _setBurnable(address contractAddress) internal {... */\n    tag_52:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2729:2747  _contractWhitelist */\n      0x02\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2729:2764  _contractWhitelist[contractAddress] */\n      0x00\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2748:2763  contractAddress */\n      dup3\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2729:2764  _contractWhitelist[contractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2721:2805  require(_contractWhitelist[contractAddress], \"provided contract is not whitelisted\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2844:2848  true */\n      0x01\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2815:2824  _burnList */\n      0x03\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2815:2841  _burnList[contractAddress] */\n      0x00\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2825:2840  contractAddress */\n      dup4\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2815:2841  _burnList[contractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2815:2848  _burnList[contractAddress] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2655:2855  function _setBurnable(address contractAddress) internal {... */\n      pop\n      jump\t// out\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2367:2649  function _setResource(bytes32 resourceID, address contractAddress) internal {... */\n    tag_58:\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2501:2516  contractAddress */\n      dup1\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2453:2486  _resourceIDToTokenContractAddress */\n      0x00\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2453:2498  _resourceIDToTokenContractAddress[resourceID] */\n      dup1\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2487:2497  resourceID */\n      dup5\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2453:2498  _resourceIDToTokenContractAddress[resourceID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2453:2516  _resourceIDToTokenContractAddress[resourceID] = contractAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2579:2589  resourceID */\n      dup2\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2526:2559  _tokenContractAddressToResourceID */\n      0x01\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2526:2576  _tokenContractAddressToResourceID[contractAddress] */\n      0x00\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2560:2575  contractAddress */\n      dup4\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2526:2576  _tokenContractAddressToResourceID[contractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2526:2589  _tokenContractAddressToResourceID[contractAddress] = resourceID */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2638:2642  true */\n      0x01\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2600:2618  _contractWhitelist */\n      0x02\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2600:2635  _contractWhitelist[contractAddress] */\n      0x00\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2619:2634  contractAddress */\n      dup4\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2600:2635  _contractWhitelist[contractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2600:2642  _contractWhitelist[contractAddress] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":2367:2649  function _setResource(bytes32 resourceID, address contractAddress) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_68:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_69:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_70:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_71:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_72:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_103\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_71\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_73:\n        /* \"#utility.yul\":641:665   */\n      tag_105\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_72\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_106:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_74:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_108\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_73\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_111\n      tag_69\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":917:1036   */\n    tag_110:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_112\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_74\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1293   */\n    tag_75:\n        /* \"#utility.yul\":1285:1286   */\n      0x00\n        /* \"#utility.yul\":1282:1283   */\n      dup1\n        /* \"#utility.yul\":1275:1287   */\n      revert\n        /* \"#utility.yul\":1299:1416   */\n    tag_76:\n        /* \"#utility.yul\":1408:1409   */\n      0x00\n        /* \"#utility.yul\":1405:1406   */\n      dup1\n        /* \"#utility.yul\":1398:1410   */\n      revert\n        /* \"#utility.yul\":1422:1524   */\n    tag_77:\n        /* \"#utility.yul\":1463:1469   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x1f\n        /* \"#utility.yul\":1510:1517   */\n      not\n        /* \"#utility.yul\":1505:1507   */\n      0x1f\n        /* \"#utility.yul\":1498:1503   */\n      dup4\n        /* \"#utility.yul\":1494:1508   */\n      add\n        /* \"#utility.yul\":1490:1518   */\n      and\n        /* \"#utility.yul\":1480:1518   */\n      swap1\n      pop\n        /* \"#utility.yul\":1422:1524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1530:1710   */\n    tag_78:\n        /* \"#utility.yul\":1578:1655   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1575:1576   */\n      0x00\n        /* \"#utility.yul\":1568:1656   */\n      mstore\n        /* \"#utility.yul\":1675:1679   */\n      0x41\n        /* \"#utility.yul\":1672:1673   */\n      0x04\n        /* \"#utility.yul\":1665:1680   */\n      mstore\n        /* \"#utility.yul\":1699:1703   */\n      0x24\n        /* \"#utility.yul\":1696:1697   */\n      0x00\n        /* \"#utility.yul\":1689:1704   */\n      revert\n        /* \"#utility.yul\":1716:1997   */\n    tag_79:\n        /* \"#utility.yul\":1799:1826   */\n      tag_118\n        /* \"#utility.yul\":1821:1825   */\n      dup3\n        /* \"#utility.yul\":1799:1826   */\n      tag_77\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1791:1797   */\n      dup2\n        /* \"#utility.yul\":1787:1827   */\n      add\n        /* \"#utility.yul\":1929:1935   */\n      dup2\n        /* \"#utility.yul\":1917:1927   */\n      dup2\n        /* \"#utility.yul\":1914:1936   */\n      lt\n        /* \"#utility.yul\":1893:1911   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1881:1891   */\n      dup3\n        /* \"#utility.yul\":1878:1912   */\n      gt\n        /* \"#utility.yul\":1875:1937   */\n      or\n        /* \"#utility.yul\":1872:1960   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":1940:1958   */\n      tag_120\n      tag_78\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1872:1960   */\n    tag_119:\n        /* \"#utility.yul\":1980:1990   */\n      dup1\n        /* \"#utility.yul\":1976:1978   */\n      0x40\n        /* \"#utility.yul\":1969:1991   */\n      mstore\n        /* \"#utility.yul\":1759:1997   */\n      pop\n        /* \"#utility.yul\":1716:1997   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2003:2132   */\n    tag_80:\n        /* \"#utility.yul\":2037:2043   */\n      0x00\n        /* \"#utility.yul\":2064:2084   */\n      tag_122\n      tag_68\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2054:2084   */\n      swap1\n      pop\n        /* \"#utility.yul\":2093:2126   */\n      tag_123\n        /* \"#utility.yul\":2121:2125   */\n      dup3\n        /* \"#utility.yul\":2113:2119   */\n      dup3\n        /* \"#utility.yul\":2093:2126   */\n      tag_79\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2003:2132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2138:2445   */\n    tag_81:\n        /* \"#utility.yul\":2199:2203   */\n      0x00\n        /* \"#utility.yul\":2289:2307   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2281:2287   */\n      dup3\n        /* \"#utility.yul\":2278:2308   */\n      gt\n        /* \"#utility.yul\":2275:2331   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":2311:2329   */\n      tag_126\n      tag_78\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2275:2331   */\n    tag_125:\n        /* \"#utility.yul\":2349:2378   */\n      tag_127\n        /* \"#utility.yul\":2371:2377   */\n      dup3\n        /* \"#utility.yul\":2349:2378   */\n      tag_77\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2341:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2437   */\n      0x20\n        /* \"#utility.yul\":2427:2431   */\n      dup2\n        /* \"#utility.yul\":2423:2438   */\n      add\n        /* \"#utility.yul\":2415:2438   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2451:2605   */\n    tag_82:\n        /* \"#utility.yul\":2535:2541   */\n      dup3\n        /* \"#utility.yul\":2530:2533   */\n      dup2\n        /* \"#utility.yul\":2525:2528   */\n      dup4\n        /* \"#utility.yul\":2512:2542   */\n      calldatacopy\n        /* \"#utility.yul\":2597:2598   */\n      0x00\n        /* \"#utility.yul\":2588:2594   */\n      dup4\n        /* \"#utility.yul\":2583:2586   */\n      dup4\n        /* \"#utility.yul\":2579:2595   */\n      add\n        /* \"#utility.yul\":2572:2599   */\n      mstore\n        /* \"#utility.yul\":2451:2605   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2611:3021   */\n    tag_83:\n        /* \"#utility.yul\":2688:2693   */\n      0x00\n        /* \"#utility.yul\":2713:2778   */\n      tag_130\n        /* \"#utility.yul\":2729:2777   */\n      tag_131\n        /* \"#utility.yul\":2770:2776   */\n      dup5\n        /* \"#utility.yul\":2729:2777   */\n      tag_81\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2713:2778   */\n      tag_80\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2704:2778   */\n      swap1\n      pop\n        /* \"#utility.yul\":2801:2807   */\n      dup3\n        /* \"#utility.yul\":2794:2799   */\n      dup2\n        /* \"#utility.yul\":2787:2808   */\n      mstore\n        /* \"#utility.yul\":2839:2843   */\n      0x20\n        /* \"#utility.yul\":2832:2837   */\n      dup2\n        /* \"#utility.yul\":2828:2844   */\n      add\n        /* \"#utility.yul\":2877:2880   */\n      dup5\n        /* \"#utility.yul\":2868:2874   */\n      dup5\n        /* \"#utility.yul\":2863:2866   */\n      dup5\n        /* \"#utility.yul\":2859:2875   */\n      add\n        /* \"#utility.yul\":2856:2881   */\n      gt\n        /* \"#utility.yul\":2853:2965   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":2884:2963   */\n      tag_133\n      tag_76\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2853:2965   */\n    tag_132:\n        /* \"#utility.yul\":2974:3015   */\n      tag_134\n        /* \"#utility.yul\":3008:3014   */\n      dup5\n        /* \"#utility.yul\":3003:3006   */\n      dup3\n        /* \"#utility.yul\":2998:3001   */\n      dup6\n        /* \"#utility.yul\":2974:3015   */\n      tag_82\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2694:3021   */\n      pop\n        /* \"#utility.yul\":2611:3021   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3040:3378   */\n    tag_84:\n        /* \"#utility.yul\":3095:3100   */\n      0x00\n        /* \"#utility.yul\":3144:3147   */\n      dup3\n        /* \"#utility.yul\":3137:3141   */\n      0x1f\n        /* \"#utility.yul\":3129:3135   */\n      dup4\n        /* \"#utility.yul\":3125:3142   */\n      add\n        /* \"#utility.yul\":3121:3148   */\n      slt\n        /* \"#utility.yul\":3111:3233   */\n      tag_136\n      jumpi\n        /* \"#utility.yul\":3152:3231   */\n      tag_137\n      tag_75\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3111:3233   */\n    tag_136:\n        /* \"#utility.yul\":3269:3275   */\n      dup2\n        /* \"#utility.yul\":3256:3276   */\n      calldataload\n        /* \"#utility.yul\":3294:3372   */\n      tag_138\n        /* \"#utility.yul\":3368:3371   */\n      dup5\n        /* \"#utility.yul\":3360:3366   */\n      dup3\n        /* \"#utility.yul\":3353:3357   */\n      0x20\n        /* \"#utility.yul\":3345:3351   */\n      dup7\n        /* \"#utility.yul\":3341:3358   */\n      add\n        /* \"#utility.yul\":3294:3372   */\n      tag_83\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3285:3372   */\n      swap2\n      pop\n        /* \"#utility.yul\":3101:3378   */\n      pop\n        /* \"#utility.yul\":3040:3378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3384:3891   */\n    tag_18:\n        /* \"#utility.yul\":3452:3458   */\n      0x00\n        /* \"#utility.yul\":3501:3503   */\n      0x20\n        /* \"#utility.yul\":3489:3498   */\n      dup3\n        /* \"#utility.yul\":3480:3487   */\n      dup5\n        /* \"#utility.yul\":3476:3499   */\n      sub\n        /* \"#utility.yul\":3472:3504   */\n      slt\n        /* \"#utility.yul\":3469:3588   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":3507:3586   */\n      tag_141\n      tag_69\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3469:3588   */\n    tag_140:\n        /* \"#utility.yul\":3655:3656   */\n      0x00\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3640:3657   */\n      add\n        /* \"#utility.yul\":3627:3658   */\n      calldataload\n        /* \"#utility.yul\":3685:3703   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3677:3683   */\n      dup2\n        /* \"#utility.yul\":3674:3704   */\n      gt\n        /* \"#utility.yul\":3671:3788   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":3707:3786   */\n      tag_143\n      tag_70\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3671:3788   */\n    tag_142:\n        /* \"#utility.yul\":3812:3874   */\n      tag_144\n        /* \"#utility.yul\":3866:3873   */\n      dup5\n        /* \"#utility.yul\":3857:3863   */\n      dup3\n        /* \"#utility.yul\":3846:3855   */\n      dup6\n        /* \"#utility.yul\":3842:3864   */\n      add\n        /* \"#utility.yul\":3812:3874   */\n      tag_84\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3802:3874   */\n      swap2\n      pop\n        /* \"#utility.yul\":3598:3884   */\n      pop\n        /* \"#utility.yul\":3384:3891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3897:3974   */\n    tag_85:\n        /* \"#utility.yul\":3934:3941   */\n      0x00\n        /* \"#utility.yul\":3963:3968   */\n      dup2\n        /* \"#utility.yul\":3952:3968   */\n      swap1\n      pop\n        /* \"#utility.yul\":3897:3974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3980:4102   */\n    tag_86:\n        /* \"#utility.yul\":4053:4077   */\n      tag_147\n        /* \"#utility.yul\":4071:4076   */\n      dup2\n        /* \"#utility.yul\":4053:4077   */\n      tag_85\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4046:4051   */\n      dup2\n        /* \"#utility.yul\":4043:4078   */\n      eq\n        /* \"#utility.yul\":4033:4096   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":4092:4093   */\n      0x00\n        /* \"#utility.yul\":4089:4090   */\n      dup1\n        /* \"#utility.yul\":4082:4094   */\n      revert\n        /* \"#utility.yul\":4033:4096   */\n    tag_148:\n        /* \"#utility.yul\":3980:4102   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4108:4247   */\n    tag_87:\n        /* \"#utility.yul\":4154:4159   */\n      0x00\n        /* \"#utility.yul\":4192:4198   */\n      dup2\n        /* \"#utility.yul\":4179:4199   */\n      calldataload\n        /* \"#utility.yul\":4170:4199   */\n      swap1\n      pop\n        /* \"#utility.yul\":4208:4241   */\n      tag_150\n        /* \"#utility.yul\":4235:4240   */\n      dup2\n        /* \"#utility.yul\":4208:4241   */\n      tag_86\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4108:4247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4253:4582   */\n    tag_22:\n        /* \"#utility.yul\":4312:4318   */\n      0x00\n        /* \"#utility.yul\":4361:4363   */\n      0x20\n        /* \"#utility.yul\":4349:4358   */\n      dup3\n        /* \"#utility.yul\":4340:4347   */\n      dup5\n        /* \"#utility.yul\":4336:4359   */\n      sub\n        /* \"#utility.yul\":4332:4364   */\n      slt\n        /* \"#utility.yul\":4329:4448   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":4367:4446   */\n      tag_153\n      tag_69\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4329:4448   */\n    tag_152:\n        /* \"#utility.yul\":4487:4488   */\n      0x00\n        /* \"#utility.yul\":4512:4565   */\n      tag_154\n        /* \"#utility.yul\":4557:4564   */\n      dup5\n        /* \"#utility.yul\":4548:4554   */\n      dup3\n        /* \"#utility.yul\":4537:4546   */\n      dup6\n        /* \"#utility.yul\":4533:4555   */\n      add\n        /* \"#utility.yul\":4512:4565   */\n      tag_87\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4502:4565   */\n      swap2\n      pop\n        /* \"#utility.yul\":4458:4575   */\n      pop\n        /* \"#utility.yul\":4253:4582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4588:4706   */\n    tag_88:\n        /* \"#utility.yul\":4675:4699   */\n      tag_156\n        /* \"#utility.yul\":4693:4698   */\n      dup2\n        /* \"#utility.yul\":4675:4699   */\n      tag_72\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4670:4673   */\n      dup3\n        /* \"#utility.yul\":4663:4700   */\n      mstore\n        /* \"#utility.yul\":4588:4706   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4712:4934   */\n    tag_25:\n        /* \"#utility.yul\":4805:4809   */\n      0x00\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4832:4841   */\n      dup3\n        /* \"#utility.yul\":4828:4846   */\n      add\n        /* \"#utility.yul\":4820:4846   */\n      swap1\n      pop\n        /* \"#utility.yul\":4856:4927   */\n      tag_158\n        /* \"#utility.yul\":4924:4925   */\n      0x00\n        /* \"#utility.yul\":4913:4922   */\n      dup4\n        /* \"#utility.yul\":4909:4926   */\n      add\n        /* \"#utility.yul\":4900:4906   */\n      dup5\n        /* \"#utility.yul\":4856:4927   */\n      tag_88\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4712:4934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4940:5030   */\n    tag_89:\n        /* \"#utility.yul\":4974:4981   */\n      0x00\n        /* \"#utility.yul\":5017:5022   */\n      dup2\n        /* \"#utility.yul\":5010:5023   */\n      iszero\n        /* \"#utility.yul\":5003:5024   */\n      iszero\n        /* \"#utility.yul\":4992:5024   */\n      swap1\n      pop\n        /* \"#utility.yul\":4940:5030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5036:5145   */\n    tag_90:\n        /* \"#utility.yul\":5117:5138   */\n      tag_161\n        /* \"#utility.yul\":5132:5137   */\n      dup2\n        /* \"#utility.yul\":5117:5138   */\n      tag_89\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5112:5115   */\n      dup3\n        /* \"#utility.yul\":5105:5139   */\n      mstore\n        /* \"#utility.yul\":5036:5145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5151:5361   */\n    tag_33:\n        /* \"#utility.yul\":5238:5242   */\n      0x00\n        /* \"#utility.yul\":5276:5278   */\n      0x20\n        /* \"#utility.yul\":5265:5274   */\n      dup3\n        /* \"#utility.yul\":5261:5279   */\n      add\n        /* \"#utility.yul\":5253:5279   */\n      swap1\n      pop\n        /* \"#utility.yul\":5289:5354   */\n      tag_163\n        /* \"#utility.yul\":5351:5352   */\n      0x00\n        /* \"#utility.yul\":5340:5349   */\n      dup4\n        /* \"#utility.yul\":5336:5353   */\n      add\n        /* \"#utility.yul\":5327:5333   */\n      dup5\n        /* \"#utility.yul\":5289:5354   */\n      tag_90\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5151:5361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5367:5841   */\n    tag_40:\n        /* \"#utility.yul\":5435:5441   */\n      0x00\n        /* \"#utility.yul\":5443:5449   */\n      dup1\n        /* \"#utility.yul\":5492:5494   */\n      0x40\n        /* \"#utility.yul\":5480:5489   */\n      dup4\n        /* \"#utility.yul\":5471:5478   */\n      dup6\n        /* \"#utility.yul\":5467:5490   */\n      sub\n        /* \"#utility.yul\":5463:5495   */\n      slt\n        /* \"#utility.yul\":5460:5579   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":5498:5577   */\n      tag_166\n      tag_69\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5460:5579   */\n    tag_165:\n        /* \"#utility.yul\":5618:5619   */\n      0x00\n        /* \"#utility.yul\":5643:5696   */\n      tag_167\n        /* \"#utility.yul\":5688:5695   */\n      dup6\n        /* \"#utility.yul\":5679:5685   */\n      dup3\n        /* \"#utility.yul\":5668:5677   */\n      dup7\n        /* \"#utility.yul\":5664:5686   */\n      add\n        /* \"#utility.yul\":5643:5696   */\n      tag_87\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5633:5696   */\n      swap3\n      pop\n        /* \"#utility.yul\":5589:5706   */\n      pop\n        /* \"#utility.yul\":5745:5747   */\n      0x20\n        /* \"#utility.yul\":5771:5824   */\n      tag_168\n        /* \"#utility.yul\":5816:5823   */\n      dup6\n        /* \"#utility.yul\":5807:5813   */\n      dup3\n        /* \"#utility.yul\":5796:5805   */\n      dup7\n        /* \"#utility.yul\":5792:5814   */\n      add\n        /* \"#utility.yul\":5771:5824   */\n      tag_74\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5761:5824   */\n      swap2\n      pop\n        /* \"#utility.yul\":5716:5834   */\n      pop\n        /* \"#utility.yul\":5367:5841   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5847:5965   */\n    tag_91:\n        /* \"#utility.yul\":5934:5958   */\n      tag_170\n        /* \"#utility.yul\":5952:5957   */\n      dup2\n        /* \"#utility.yul\":5934:5958   */\n      tag_85\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5929:5932   */\n      dup3\n        /* \"#utility.yul\":5922:5959   */\n      mstore\n        /* \"#utility.yul\":5847:5965   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5971:6193   */\n    tag_46:\n        /* \"#utility.yul\":6064:6068   */\n      0x00\n        /* \"#utility.yul\":6102:6104   */\n      0x20\n        /* \"#utility.yul\":6091:6100   */\n      dup3\n        /* \"#utility.yul\":6087:6105   */\n      add\n        /* \"#utility.yul\":6079:6105   */\n      swap1\n      pop\n        /* \"#utility.yul\":6115:6186   */\n      tag_172\n        /* \"#utility.yul\":6183:6184   */\n      0x00\n        /* \"#utility.yul\":6172:6181   */\n      dup4\n        /* \"#utility.yul\":6168:6185   */\n      add\n        /* \"#utility.yul\":6159:6165   */\n      dup5\n        /* \"#utility.yul\":6115:6186   */\n      tag_91\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5971:6193   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6199:6368   */\n    tag_92:\n        /* \"#utility.yul\":6283:6294   */\n      0x00\n        /* \"#utility.yul\":6317:6323   */\n      dup3\n        /* \"#utility.yul\":6312:6315   */\n      dup3\n        /* \"#utility.yul\":6305:6324   */\n      mstore\n        /* \"#utility.yul\":6357:6361   */\n      0x20\n        /* \"#utility.yul\":6352:6355   */\n      dup3\n        /* \"#utility.yul\":6348:6362   */\n      add\n        /* \"#utility.yul\":6333:6362   */\n      swap1\n      pop\n        /* \"#utility.yul\":6199:6368   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6374:6554   */\n    tag_93:\n        /* \"#utility.yul\":6514:6546   */\n      0x73656e646572206d7573742062652062726964676520636f6e74726163740000\n        /* \"#utility.yul\":6510:6511   */\n      0x00\n        /* \"#utility.yul\":6502:6508   */\n      dup3\n        /* \"#utility.yul\":6498:6512   */\n      add\n        /* \"#utility.yul\":6491:6547   */\n      mstore\n        /* \"#utility.yul\":6374:6554   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6560:6926   */\n    tag_94:\n        /* \"#utility.yul\":6702:6705   */\n      0x00\n        /* \"#utility.yul\":6723:6790   */\n      tag_176\n        /* \"#utility.yul\":6787:6789   */\n      0x1e\n        /* \"#utility.yul\":6782:6785   */\n      dup4\n        /* \"#utility.yul\":6723:6790   */\n      tag_92\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6716:6790   */\n      swap2\n      pop\n        /* \"#utility.yul\":6799:6892   */\n      tag_177\n        /* \"#utility.yul\":6888:6891   */\n      dup3\n        /* \"#utility.yul\":6799:6892   */\n      tag_93\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6917:6919   */\n      0x20\n        /* \"#utility.yul\":6912:6915   */\n      dup3\n        /* \"#utility.yul\":6908:6920   */\n      add\n        /* \"#utility.yul\":6901:6920   */\n      swap1\n      pop\n        /* \"#utility.yul\":6560:6926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6932:7351   */\n    tag_62:\n        /* \"#utility.yul\":7098:7102   */\n      0x00\n        /* \"#utility.yul\":7136:7138   */\n      0x20\n        /* \"#utility.yul\":7125:7134   */\n      dup3\n        /* \"#utility.yul\":7121:7139   */\n      add\n        /* \"#utility.yul\":7113:7139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7185:7194   */\n      dup2\n        /* \"#utility.yul\":7179:7183   */\n      dup2\n        /* \"#utility.yul\":7175:7195   */\n      sub\n        /* \"#utility.yul\":7171:7172   */\n      0x00\n        /* \"#utility.yul\":7160:7169   */\n      dup4\n        /* \"#utility.yul\":7156:7173   */\n      add\n        /* \"#utility.yul\":7149:7196   */\n      mstore\n        /* \"#utility.yul\":7213:7344   */\n      tag_179\n        /* \"#utility.yul\":7339:7343   */\n      dup2\n        /* \"#utility.yul\":7213:7344   */\n      tag_94\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7205:7344   */\n      swap1\n      pop\n        /* \"#utility.yul\":6932:7351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7357:7580   */\n    tag_95:\n        /* \"#utility.yul\":7497:7531   */\n      0x70726f766964656420636f6e7472616374206973206e6f742077686974656c69\n        /* \"#utility.yul\":7493:7494   */\n      0x00\n        /* \"#utility.yul\":7485:7491   */\n      dup3\n        /* \"#utility.yul\":7481:7495   */\n      add\n        /* \"#utility.yul\":7474:7532   */\n      mstore\n        /* \"#utility.yul\":7566:7572   */\n      0x7374656400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7561:7563   */\n      0x20\n        /* \"#utility.yul\":7553:7559   */\n      dup3\n        /* \"#utility.yul\":7549:7564   */\n      add\n        /* \"#utility.yul\":7542:7573   */\n      mstore\n        /* \"#utility.yul\":7357:7580   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7586:7952   */\n    tag_96:\n        /* \"#utility.yul\":7728:7731   */\n      0x00\n        /* \"#utility.yul\":7749:7816   */\n      tag_182\n        /* \"#utility.yul\":7813:7815   */\n      0x24\n        /* \"#utility.yul\":7808:7811   */\n      dup4\n        /* \"#utility.yul\":7749:7816   */\n      tag_92\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":7742:7816   */\n      swap2\n      pop\n        /* \"#utility.yul\":7825:7918   */\n      tag_183\n        /* \"#utility.yul\":7914:7917   */\n      dup3\n        /* \"#utility.yul\":7825:7918   */\n      tag_95\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7943:7945   */\n      0x40\n        /* \"#utility.yul\":7938:7941   */\n      dup3\n        /* \"#utility.yul\":7934:7946   */\n      add\n        /* \"#utility.yul\":7927:7946   */\n      swap1\n      pop\n        /* \"#utility.yul\":7586:7952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7958:8377   */\n    tag_66:\n        /* \"#utility.yul\":8124:8128   */\n      0x00\n        /* \"#utility.yul\":8162:8164   */\n      0x20\n        /* \"#utility.yul\":8151:8160   */\n      dup3\n        /* \"#utility.yul\":8147:8165   */\n      add\n        /* \"#utility.yul\":8139:8165   */\n      swap1\n      pop\n        /* \"#utility.yul\":8211:8220   */\n      dup2\n        /* \"#utility.yul\":8205:8209   */\n      dup2\n        /* \"#utility.yul\":8201:8221   */\n      sub\n        /* \"#utility.yul\":8197:8198   */\n      0x00\n        /* \"#utility.yul\":8186:8195   */\n      dup4\n        /* \"#utility.yul\":8182:8199   */\n      add\n        /* \"#utility.yul\":8175:8222   */\n      mstore\n        /* \"#utility.yul\":8239:8370   */\n      tag_185\n        /* \"#utility.yul\":8365:8369   */\n      dup2\n        /* \"#utility.yul\":8239:8370   */\n      tag_96\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":8231:8370   */\n      swap1\n      pop\n        /* \"#utility.yul\":7958:8377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fa01a946fe143ec1555523a40d939bea4bd7ceb82779c19ac99dfbfbd981369464736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50604051610ac1380380610ac1833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b6080516109a361011e6000396000818161020b015261029d01526109a36000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636a70d0811161005b5780636a70d081146101135780637f79bea814610143578063b8fa373614610173578063c8ba6c871461018f57610088565b806307b7ed991461008d5780630968f264146100a95780630a6d55d8146100c5578063318c136e146100f5575b600080fd5b6100a760048036038101906100a29190610575565b6101bf565b005b6100c360048036038101906100be91906106e8565b6101d3565b005b6100df60048036038101906100da9190610767565b6101d6565b6040516100ec91906107a3565b60405180910390f35b6100fd610209565b60405161010a91906107a3565b60405180910390f35b61012d60048036038101906101289190610575565b61022d565b60405161013a91906107d9565b60405180910390f35b61015d60048036038101906101589190610575565b61024d565b60405161016a91906107d9565b60405180910390f35b61018d600480360381019061018891906107f4565b61026d565b005b6101a960048036038101906101a49190610575565b610283565b6040516101b69190610843565b60405180910390f35b6101c761029b565b6101d08161032b565b50565b50565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60036020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b61027561029b565b61027f8282610412565b5050565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610320906108bb565b60405180910390fd5b565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166103b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ae9061094d565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8060008084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054282610517565b9050919050565b61055281610537565b811461055d57600080fd5b50565b60008135905061056f81610549565b92915050565b60006020828403121561058b5761058a61050d565b5b600061059984828501610560565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105f5826105ac565b810181811067ffffffffffffffff82111715610614576106136105bd565b5b80604052505050565b6000610627610503565b905061063382826105ec565b919050565b600067ffffffffffffffff821115610653576106526105bd565b5b61065c826105ac565b9050602081019050919050565b82818337600083830152505050565b600061068b61068684610638565b61061d565b9050828152602081018484840111156106a7576106a66105a7565b5b6106b2848285610669565b509392505050565b600082601f8301126106cf576106ce6105a2565b5b81356106df848260208601610678565b91505092915050565b6000602082840312156106fe576106fd61050d565b5b600082013567ffffffffffffffff81111561071c5761071b610512565b5b610728848285016106ba565b91505092915050565b6000819050919050565b61074481610731565b811461074f57600080fd5b50565b6000813590506107618161073b565b92915050565b60006020828403121561077d5761077c61050d565b5b600061078b84828501610752565b91505092915050565b61079d81610537565b82525050565b60006020820190506107b86000830184610794565b92915050565b60008115159050919050565b6107d3816107be565b82525050565b60006020820190506107ee60008301846107ca565b92915050565b6000806040838503121561080b5761080a61050d565b5b600061081985828601610752565b925050602061082a85828601610560565b9150509250929050565b61083d81610731565b82525050565b60006020820190506108586000830184610834565b92915050565b600082825260208201905092915050565b7f73656e646572206d7573742062652062726964676520636f6e74726163740000600082015250565b60006108a5601e8361085e565b91506108b08261086f565b602082019050919050565b600060208201905081810360008301526108d481610898565b9050919050565b7f70726f766964656420636f6e7472616374206973206e6f742077686974656c6960008201527f7374656400000000000000000000000000000000000000000000000000000000602082015250565b600061093760248361085e565b9150610942826108db565b604082019050919050565b600060208201905081810360008301526109668161092a565b905091905056fea2646970667358221220fa01a946fe143ec1555523a40d939bea4bd7ceb82779c19ac99dfbfbd981369464736f6c634300080b0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAC1 CODESIZE SUB DUP1 PUSH2 0xAC1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0xFC JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C DUP3 PUSH2 0x71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC DUP2 PUSH2 0x91 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC9 DUP2 PUSH2 0xA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5 JUMPI PUSH2 0xE4 PUSH2 0x6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3 DUP5 DUP3 DUP6 ADD PUSH2 0xBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x9A3 PUSH2 0x11E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x20B ADD MSTORE PUSH2 0x29D ADD MSTORE PUSH2 0x9A3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A70D081 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6A70D081 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x7F79BEA8 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xB8FA3736 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xC8BA6C87 EQ PUSH2 0x18F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x7B7ED99 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x968F264 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA6D55D8 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x318C136E EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x1D0 DUP2 PUSH2 0x32B JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x275 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x27F DUP3 DUP3 PUSH2 0x412 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x320 SWAP1 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AE SWAP1 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x542 DUP3 PUSH2 0x517 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x552 DUP2 PUSH2 0x537 JUMP JUMPDEST DUP2 EQ PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x56F DUP2 PUSH2 0x549 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58B JUMPI PUSH2 0x58A PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x599 DUP5 DUP3 DUP6 ADD PUSH2 0x560 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5F5 DUP3 PUSH2 0x5AC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x614 JUMPI PUSH2 0x613 PUSH2 0x5BD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x627 PUSH2 0x503 JUMP JUMPDEST SWAP1 POP PUSH2 0x633 DUP3 DUP3 PUSH2 0x5EC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x653 JUMPI PUSH2 0x652 PUSH2 0x5BD JUMP JUMPDEST JUMPDEST PUSH2 0x65C DUP3 PUSH2 0x5AC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68B PUSH2 0x686 DUP5 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x6A7 JUMPI PUSH2 0x6A6 PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST PUSH2 0x6B2 DUP5 DUP3 DUP6 PUSH2 0x669 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x5A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x678 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH2 0x71B PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH2 0x728 DUP5 DUP3 DUP6 ADD PUSH2 0x6BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x744 DUP2 PUSH2 0x731 JUMP JUMPDEST DUP2 EQ PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x761 DUP2 PUSH2 0x73B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77D JUMPI PUSH2 0x77C PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP5 DUP3 DUP6 ADD PUSH2 0x752 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x79D DUP2 PUSH2 0x537 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x794 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D3 DUP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80B JUMPI PUSH2 0x80A PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP6 DUP3 DUP7 ADD PUSH2 0x752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x82A DUP6 DUP3 DUP7 ADD PUSH2 0x560 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x83D DUP2 PUSH2 0x731 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x858 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x73656E646572206D7573742062652062726964676520636F6E74726163740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A5 PUSH1 0x1E DUP4 PUSH2 0x85E JUMP JUMPDEST SWAP2 POP PUSH2 0x8B0 DUP3 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D4 DUP2 PUSH2 0x898 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x70726F766964656420636F6E7472616374206973206E6F742077686974656C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x937 PUSH1 0x24 DUP4 PUSH2 0x85E JUMP JUMPDEST SWAP2 POP PUSH2 0x942 DUP3 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x966 DUP2 PUSH2 0x92A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL ADD 0xA9 CHAINID INVALID EQ RETURNDATACOPY 0xC1 SSTORE SSTORE 0x23 LOG4 0xD SWAP4 SWAP12 0xEA 0x4B 0xD7 0xCE 0xB8 0x27 PUSH26 0xC19AC99DFBFBD981369464736F6C634300080B00330000000000 ",
							"sourceMap": "273:2584:0:-:0;;;970:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1062:13;1045:30;;;;;;;;;;970:112;273:2584;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;273:2584:0:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_bridgeAddress_7": {
									"entryPoint": 521,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_burnList_23": {
									"entryPoint": 557,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_contractWhitelist_19": {
									"entryPoint": 589,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_onlyBridge_53": {
									"entryPoint": 667,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_resourceIDToTokenContractAddress_11": {
									"entryPoint": 470,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setBurnable_136": {
									"entryPoint": 811,
									"id": 136,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setResource_117": {
									"entryPoint": 1042,
									"id": 117,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_tokenContractAddressToResourceID_15": {
									"entryPoint": 643,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBurnable_84": {
									"entryPoint": 447,
									"id": 84,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setResource_70": {
									"entryPoint": 621,
									"id": 70,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_91": {
									"entryPoint": 467,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8380:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:2"
															},
															"nodeType": "YulIf",
															"src": "917:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:2",
														"type": ""
													}
												],
												"src": "841:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1265:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1285:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1275:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1275:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1275:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1176:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1388:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1408:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1398:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1398:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1398:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "1299:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1470:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1480:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1498:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1505:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1494:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1494:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1514:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1510:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1510:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1490:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1480:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1453:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1463:6:2",
														"type": ""
													}
												],
												"src": "1422:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1558:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1578:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1568:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1568:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1675:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1665:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1665:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1699:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1689:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1689:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1530:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1759:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1769:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1821:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1799:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1799:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1787:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1773:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1938:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1940:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1881:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1893:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1878:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1878:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1917:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1929:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1914:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1914:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1875:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:62:2"
															},
															"nodeType": "YulIf",
															"src": "1872:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1976:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1980:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1969:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1745:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1753:4:2",
														"type": ""
													}
												],
												"src": "1716:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2044:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2054:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2064:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2064:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2113:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2121:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2093:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2093:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2028:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2037:6:2",
														"type": ""
													}
												],
												"src": "2003:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2204:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2309:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2311:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2311:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2311:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2281:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2289:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2278:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:30:2"
															},
															"nodeType": "YulIf",
															"src": "2275:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2341:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2349:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2349:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2341:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2415:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2427:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2433:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2423:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2423:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2415:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2188:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2199:4:2",
														"type": ""
													}
												],
												"src": "2138:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2502:103:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:2"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2530:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2535:6:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2512:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2512:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2512:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2583:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2588:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2579:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2579:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2572:27:2"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2484:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2489:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2494:6:2",
														"type": ""
													}
												],
												"src": "2451:154:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2694:327:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2704:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2729:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2729:48:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2713:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:65:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2704:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2794:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2801:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2787:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2787:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2787:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2817:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2832:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2839:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2828:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2828:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2821:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2882:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2884:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2884:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2884:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2863:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2868:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2859:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2877:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2856:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:25:2"
															},
															"nodeType": "YulIf",
															"src": "2853:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2998:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3003:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3008:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2974:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2974:41:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2667:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2672:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2680:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2688:5:2",
														"type": ""
													}
												],
												"src": "2611:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3101:277:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3150:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3152:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3152:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3152:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3129:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3137:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3125:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3125:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3144:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:35:2"
															},
															"nodeType": "YulIf",
															"src": "3111:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3242:34:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3269:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3256:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:20:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3246:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3285:87:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3345:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3353:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3341:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3341:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3360:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3368:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3294:46:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3294:78:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3285:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3079:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3087:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3095:5:2",
														"type": ""
													}
												],
												"src": "3040:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3459:432:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3505:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3507:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3507:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3507:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3480:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3489:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3476:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3476:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3501:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3472:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:32:2"
															},
															"nodeType": "YulIf",
															"src": "3469:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3598:286:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3613:45:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3644:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3655:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3640:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3640:17:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3627:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3627:31:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3617:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3705:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3707:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3707:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3707:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3677:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3685:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3674:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3674:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "3671:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3802:72:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3846:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3857:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3842:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3842:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3866:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3812:29:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3812:62:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3802:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3429:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3440:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3452:6:2",
														"type": ""
													}
												],
												"src": "3384:507:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3942:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3952:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3963:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3952:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3924:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3934:7:2",
														"type": ""
													}
												],
												"src": "3897:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4023:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4080:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4089:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4092:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4082:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4082:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4082:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4046:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4071:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "4053:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4053:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4043:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4043:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4036:43:2"
															},
															"nodeType": "YulIf",
															"src": "4033:63:2"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4016:5:2",
														"type": ""
													}
												],
												"src": "3980:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4160:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4170:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4192:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4179:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4179:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4170:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4235:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "4208:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4208:33:2"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4138:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4146:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4154:5:2",
														"type": ""
													}
												],
												"src": "4108:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4319:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4365:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4367:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4367:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4367:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4340:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4349:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4336:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4336:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4361:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4332:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4332:32:2"
															},
															"nodeType": "YulIf",
															"src": "4329:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4458:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4473:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4477:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4502:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4537:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4548:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4533:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4533:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4557:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4512:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4512:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4502:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4289:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4300:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4312:6:2",
														"type": ""
													}
												],
												"src": "4253:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4653:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4670:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4693:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4675:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4675:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4641:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4648:3:2",
														"type": ""
													}
												],
												"src": "4588:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4810:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4820:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4832:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4828:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4828:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4820:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4900:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4924:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4909:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4909:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4856:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4856:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4856:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4782:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4794:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4805:4:2",
														"type": ""
													}
												],
												"src": "4712:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4992:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5017:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5010:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4992:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4964:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4974:7:2",
														"type": ""
													}
												],
												"src": "4940:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5095:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5112:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5132:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5117:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5117:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5105:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5105:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5105:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5083:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5090:3:2",
														"type": ""
													}
												],
												"src": "5036:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5243:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5253:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5265:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5276:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5261:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5253:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5327:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5340:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5351:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5336:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5289:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5289:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5289:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5215:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5227:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5238:4:2",
														"type": ""
													}
												],
												"src": "5151:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5450:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5496:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5498:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5498:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5498:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5471:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5480:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5467:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5467:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5492:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5463:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5463:32:2"
															},
															"nodeType": "YulIf",
															"src": "5460:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5589:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5604:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5618:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5608:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5668:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5679:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5664:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5664:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5688:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5643:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5643:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5633:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5716:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5731:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5745:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5735:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5761:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5796:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5807:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5792:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5792:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5816:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5771:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5771:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5761:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5412:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5423:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5435:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5443:6:2",
														"type": ""
													}
												],
												"src": "5367:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5912:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5929:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5952:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5934:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5934:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5922:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5922:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5922:37:2"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5900:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5907:3:2",
														"type": ""
													}
												],
												"src": "5847:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6069:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6079:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6091:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6102:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6087:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6079:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6159:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6172:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6183:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6168:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6168:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6115:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6115:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6115:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6041:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6053:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6064:4:2",
														"type": ""
													}
												],
												"src": "5971:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6295:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6312:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6317:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6305:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6305:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6305:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6333:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6352:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6357:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6348:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6333:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6267:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6272:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6283:11:2",
														"type": ""
													}
												],
												"src": "6199:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6480:74:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6502:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6510:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6498:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6498:14:2"
																	},
																	{
																		"hexValue": "73656e646572206d7573742062652062726964676520636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6514:32:2",
																		"type": "",
																		"value": "sender must be bridge contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6491:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6491:56:2"
														}
													]
												},
												"name": "store_literal_in_memory_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6472:6:2",
														"type": ""
													}
												],
												"src": "6374:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6706:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6716:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6782:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6787:2:2",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6723:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6716:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6888:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
																	"nodeType": "YulIdentifier",
																	"src": "6799:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6799:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6799:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6901:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6912:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6917:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6901:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6694:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6702:3:2",
														"type": ""
													}
												],
												"src": "6560:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7103:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7113:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7125:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7121:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7121:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7113:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7160:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7171:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7156:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7156:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7179:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7185:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7175:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7175:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7149:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7149:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7149:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7205:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7339:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7213:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7213:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7205:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7083:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7098:4:2",
														"type": ""
													}
												],
												"src": "6932:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7463:117:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7485:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7493:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7481:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7481:14:2"
																	},
																	{
																		"hexValue": "70726f766964656420636f6e7472616374206973206e6f742077686974656c69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7497:34:2",
																		"type": "",
																		"value": "provided contract is not whiteli"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7553:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7561:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7549:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7549:15:2"
																	},
																	{
																		"hexValue": "73746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7566:6:2",
																		"type": "",
																		"value": "sted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7542:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7542:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7542:31:2"
														}
													]
												},
												"name": "store_literal_in_memory_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7455:6:2",
														"type": ""
													}
												],
												"src": "7357:223:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7732:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7742:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7808:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7813:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7749:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7749:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7742:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7914:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
																	"nodeType": "YulIdentifier",
																	"src": "7825:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7825:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7927:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7938:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7943:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7934:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7934:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7927:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7720:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7728:3:2",
														"type": ""
													}
												],
												"src": "7586:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8129:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8139:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8151:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8162:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8147:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8147:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8139:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8186:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8197:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8182:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8182:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8205:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8211:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8201:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8201:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8175:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8175:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8175:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8231:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8365:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8239:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8231:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8109:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8124:4:2",
														"type": ""
													}
												],
												"src": "7958:419:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e(memPtr) {\n\n        mstore(add(memPtr, 0), \"sender must be bridge contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da(memPtr) {\n\n        mstore(add(memPtr, 0), \"provided contract is not whiteli\")\n\n        mstore(add(memPtr, 32), \"sted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"7": [
									{
										"length": 32,
										"start": 523
									},
									{
										"length": 32,
										"start": 669
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80636a70d0811161005b5780636a70d081146101135780637f79bea814610143578063b8fa373614610173578063c8ba6c871461018f57610088565b806307b7ed991461008d5780630968f264146100a95780630a6d55d8146100c5578063318c136e146100f5575b600080fd5b6100a760048036038101906100a29190610575565b6101bf565b005b6100c360048036038101906100be91906106e8565b6101d3565b005b6100df60048036038101906100da9190610767565b6101d6565b6040516100ec91906107a3565b60405180910390f35b6100fd610209565b60405161010a91906107a3565b60405180910390f35b61012d60048036038101906101289190610575565b61022d565b60405161013a91906107d9565b60405180910390f35b61015d60048036038101906101589190610575565b61024d565b60405161016a91906107d9565b60405180910390f35b61018d600480360381019061018891906107f4565b61026d565b005b6101a960048036038101906101a49190610575565b610283565b6040516101b69190610843565b60405180910390f35b6101c761029b565b6101d08161032b565b50565b50565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60036020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b61027561029b565b61027f8282610412565b5050565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610320906108bb565b60405180910390fd5b565b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166103b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ae9061094d565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8060008084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054282610517565b9050919050565b61055281610537565b811461055d57600080fd5b50565b60008135905061056f81610549565b92915050565b60006020828403121561058b5761058a61050d565b5b600061059984828501610560565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105f5826105ac565b810181811067ffffffffffffffff82111715610614576106136105bd565b5b80604052505050565b6000610627610503565b905061063382826105ec565b919050565b600067ffffffffffffffff821115610653576106526105bd565b5b61065c826105ac565b9050602081019050919050565b82818337600083830152505050565b600061068b61068684610638565b61061d565b9050828152602081018484840111156106a7576106a66105a7565b5b6106b2848285610669565b509392505050565b600082601f8301126106cf576106ce6105a2565b5b81356106df848260208601610678565b91505092915050565b6000602082840312156106fe576106fd61050d565b5b600082013567ffffffffffffffff81111561071c5761071b610512565b5b610728848285016106ba565b91505092915050565b6000819050919050565b61074481610731565b811461074f57600080fd5b50565b6000813590506107618161073b565b92915050565b60006020828403121561077d5761077c61050d565b5b600061078b84828501610752565b91505092915050565b61079d81610537565b82525050565b60006020820190506107b86000830184610794565b92915050565b60008115159050919050565b6107d3816107be565b82525050565b60006020820190506107ee60008301846107ca565b92915050565b6000806040838503121561080b5761080a61050d565b5b600061081985828601610752565b925050602061082a85828601610560565b9150509250929050565b61083d81610731565b82525050565b60006020820190506108586000830184610834565b92915050565b600082825260208201905092915050565b7f73656e646572206d7573742062652062726964676520636f6e74726163740000600082015250565b60006108a5601e8361085e565b91506108b08261086f565b602082019050919050565b600060208201905081810360008301526108d481610898565b9050919050565b7f70726f766964656420636f6e7472616374206973206e6f742077686974656c6960008201527f7374656400000000000000000000000000000000000000000000000000000000602082015250565b600061093760248361085e565b9150610942826108db565b604082019050919050565b600060208201905081810360008301526109668161092a565b905091905056fea2646970667358221220fa01a946fe143ec1555523a40d939bea4bd7ceb82779c19ac99dfbfbd981369464736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A70D081 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6A70D081 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x7F79BEA8 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xB8FA3736 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xC8BA6C87 EQ PUSH2 0x18F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x7B7ED99 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x968F264 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA6D55D8 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x318C136E EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x1BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x7D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x1D0 DUP2 PUSH2 0x32B JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x275 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x27F DUP3 DUP3 PUSH2 0x412 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x320 SWAP1 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AE SWAP1 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x542 DUP3 PUSH2 0x517 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x552 DUP2 PUSH2 0x537 JUMP JUMPDEST DUP2 EQ PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x56F DUP2 PUSH2 0x549 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58B JUMPI PUSH2 0x58A PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x599 DUP5 DUP3 DUP6 ADD PUSH2 0x560 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5F5 DUP3 PUSH2 0x5AC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x614 JUMPI PUSH2 0x613 PUSH2 0x5BD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x627 PUSH2 0x503 JUMP JUMPDEST SWAP1 POP PUSH2 0x633 DUP3 DUP3 PUSH2 0x5EC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x653 JUMPI PUSH2 0x652 PUSH2 0x5BD JUMP JUMPDEST JUMPDEST PUSH2 0x65C DUP3 PUSH2 0x5AC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68B PUSH2 0x686 DUP5 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x6A7 JUMPI PUSH2 0x6A6 PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST PUSH2 0x6B2 DUP5 DUP3 DUP6 PUSH2 0x669 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6CF JUMPI PUSH2 0x6CE PUSH2 0x5A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x678 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FE JUMPI PUSH2 0x6FD PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH2 0x71B PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH2 0x728 DUP5 DUP3 DUP6 ADD PUSH2 0x6BA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x744 DUP2 PUSH2 0x731 JUMP JUMPDEST DUP2 EQ PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x761 DUP2 PUSH2 0x73B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77D JUMPI PUSH2 0x77C PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP5 DUP3 DUP6 ADD PUSH2 0x752 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x79D DUP2 PUSH2 0x537 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x794 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D3 DUP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80B JUMPI PUSH2 0x80A PUSH2 0x50D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x819 DUP6 DUP3 DUP7 ADD PUSH2 0x752 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x82A DUP6 DUP3 DUP7 ADD PUSH2 0x560 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x83D DUP2 PUSH2 0x731 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x858 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x834 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x73656E646572206D7573742062652062726964676520636F6E74726163740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A5 PUSH1 0x1E DUP4 PUSH2 0x85E JUMP JUMPDEST SWAP2 POP PUSH2 0x8B0 DUP3 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D4 DUP2 PUSH2 0x898 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x70726F766964656420636F6E7472616374206973206E6F742077686974656C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x937 PUSH1 0x24 DUP4 PUSH2 0x85E JUMP JUMPDEST SWAP2 POP PUSH2 0x942 DUP3 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x966 DUP2 PUSH2 0x92A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL ADD 0xA9 CHAINID INVALID EQ RETURNDATACOPY 0xC1 SSTORE SSTORE 0x23 LOG4 0xD SWAP4 SWAP12 0xEA 0x4B 0xD7 0xCE 0xB8 0x27 PUSH26 0xC19AC99DFBFBD981369464736F6C634300080B00330000000000 ",
							"sourceMap": "273:2584:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2296:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;408:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;318:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;755:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;652:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1774:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;528:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2170:120;836:13;:11;:13::i;:::-;2254:29:::1;2267:15;2254:12;:29::i;:::-;2170:120:::0;:::o;2296:65::-;;:::o;408:69::-;;;;;;;;;;;;;;;;;;;;;;:::o;318:39::-;;;:::o;755:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;652:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;1774:154::-;836:13;:11;:13::i;:::-;1880:41:::1;1893:10;1905:15;1880:12;:41::i;:::-;1774:154:::0;;:::o;528:69::-;;;;;;;;;;;;;;;;;:::o;1088:124::-;1156:14;1142:28;;:10;:28;;;1134:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1088:124::o;2655:200::-;2729:18;:35;2748:15;2729:35;;;;;;;;;;;;;;;;;;;;;;;;;2721:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;2844:4;2815:9;:26;2825:15;2815:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;2655:200;:::o;2367:282::-;2501:15;2453:33;:45;2487:10;2453:45;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;2579:10;2526:33;:50;2560:15;2526:50;;;;;;;;;;;;;;;:63;;;;2638:4;2600:18;:35;2619:15;2600:35;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;2367:282;;:::o;7:75:2:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:117::-;1285:1;1282;1275:12;1299:117;1408:1;1405;1398:12;1422:102;1463:6;1514:2;1510:7;1505:2;1498:5;1494:14;1490:28;1480:38;;1422:102;;;:::o;1530:180::-;1578:77;1575:1;1568:88;1675:4;1672:1;1665:15;1699:4;1696:1;1689:15;1716:281;1799:27;1821:4;1799:27;:::i;:::-;1791:6;1787:40;1929:6;1917:10;1914:22;1893:18;1881:10;1878:34;1875:62;1872:88;;;1940:18;;:::i;:::-;1872:88;1980:10;1976:2;1969:22;1759:238;1716:281;;:::o;2003:129::-;2037:6;2064:20;;:::i;:::-;2054:30;;2093:33;2121:4;2113:6;2093:33;:::i;:::-;2003:129;;;:::o;2138:307::-;2199:4;2289:18;2281:6;2278:30;2275:56;;;2311:18;;:::i;:::-;2275:56;2349:29;2371:6;2349:29;:::i;:::-;2341:37;;2433:4;2427;2423:15;2415:23;;2138:307;;;:::o;2451:154::-;2535:6;2530:3;2525;2512:30;2597:1;2588:6;2583:3;2579:16;2572:27;2451:154;;;:::o;2611:410::-;2688:5;2713:65;2729:48;2770:6;2729:48;:::i;:::-;2713:65;:::i;:::-;2704:74;;2801:6;2794:5;2787:21;2839:4;2832:5;2828:16;2877:3;2868:6;2863:3;2859:16;2856:25;2853:112;;;2884:79;;:::i;:::-;2853:112;2974:41;3008:6;3003:3;2998;2974:41;:::i;:::-;2694:327;2611:410;;;;;:::o;3040:338::-;3095:5;3144:3;3137:4;3129:6;3125:17;3121:27;3111:122;;3152:79;;:::i;:::-;3111:122;3269:6;3256:20;3294:78;3368:3;3360:6;3353:4;3345:6;3341:17;3294:78;:::i;:::-;3285:87;;3101:277;3040:338;;;;:::o;3384:507::-;3452:6;3501:2;3489:9;3480:7;3476:23;3472:32;3469:119;;;3507:79;;:::i;:::-;3469:119;3655:1;3644:9;3640:17;3627:31;3685:18;3677:6;3674:30;3671:117;;;3707:79;;:::i;:::-;3671:117;3812:62;3866:7;3857:6;3846:9;3842:22;3812:62;:::i;:::-;3802:72;;3598:286;3384:507;;;;:::o;3897:77::-;3934:7;3963:5;3952:16;;3897:77;;;:::o;3980:122::-;4053:24;4071:5;4053:24;:::i;:::-;4046:5;4043:35;4033:63;;4092:1;4089;4082:12;4033:63;3980:122;:::o;4108:139::-;4154:5;4192:6;4179:20;4170:29;;4208:33;4235:5;4208:33;:::i;:::-;4108:139;;;;:::o;4253:329::-;4312:6;4361:2;4349:9;4340:7;4336:23;4332:32;4329:119;;;4367:79;;:::i;:::-;4329:119;4487:1;4512:53;4557:7;4548:6;4537:9;4533:22;4512:53;:::i;:::-;4502:63;;4458:117;4253:329;;;;:::o;4588:118::-;4675:24;4693:5;4675:24;:::i;:::-;4670:3;4663:37;4588:118;;:::o;4712:222::-;4805:4;4843:2;4832:9;4828:18;4820:26;;4856:71;4924:1;4913:9;4909:17;4900:6;4856:71;:::i;:::-;4712:222;;;;:::o;4940:90::-;4974:7;5017:5;5010:13;5003:21;4992:32;;4940:90;;;:::o;5036:109::-;5117:21;5132:5;5117:21;:::i;:::-;5112:3;5105:34;5036:109;;:::o;5151:210::-;5238:4;5276:2;5265:9;5261:18;5253:26;;5289:65;5351:1;5340:9;5336:17;5327:6;5289:65;:::i;:::-;5151:210;;;;:::o;5367:474::-;5435:6;5443;5492:2;5480:9;5471:7;5467:23;5463:32;5460:119;;;5498:79;;:::i;:::-;5460:119;5618:1;5643:53;5688:7;5679:6;5668:9;5664:22;5643:53;:::i;:::-;5633:63;;5589:117;5745:2;5771:53;5816:7;5807:6;5796:9;5792:22;5771:53;:::i;:::-;5761:63;;5716:118;5367:474;;;;;:::o;5847:118::-;5934:24;5952:5;5934:24;:::i;:::-;5929:3;5922:37;5847:118;;:::o;5971:222::-;6064:4;6102:2;6091:9;6087:18;6079:26;;6115:71;6183:1;6172:9;6168:17;6159:6;6115:71;:::i;:::-;5971:222;;;;:::o;6199:169::-;6283:11;6317:6;6312:3;6305:19;6357:4;6352:3;6348:14;6333:29;;6199:169;;;;:::o;6374:180::-;6514:32;6510:1;6502:6;6498:14;6491:56;6374:180;:::o;6560:366::-;6702:3;6723:67;6787:2;6782:3;6723:67;:::i;:::-;6716:74;;6799:93;6888:3;6799:93;:::i;:::-;6917:2;6912:3;6908:12;6901:19;;6560:366;;;:::o;6932:419::-;7098:4;7136:2;7125:9;7121:18;7113:26;;7185:9;7179:4;7175:20;7171:1;7160:9;7156:17;7149:47;7213:131;7339:4;7213:131;:::i;:::-;7205:139;;6932:419;;;:::o;7357:223::-;7497:34;7493:1;7485:6;7481:14;7474:58;7566:6;7561:2;7553:6;7549:15;7542:31;7357:223;:::o;7586:366::-;7728:3;7749:67;7813:2;7808:3;7749:67;:::i;:::-;7742:74;;7825:93;7914:3;7825:93;:::i;:::-;7943:2;7938:3;7934:12;7927:19;;7586:366;;;:::o;7958:419::-;8124:4;8162:2;8151:9;8147:18;8139:26;;8211:9;8205:4;8201:20;8197:1;8186:9;8182:17;8175:47;8239:131;8365:4;8239:131;:::i;:::-;8231:139;;7958:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "493400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_bridgeAddress()": "infinite",
								"_burnList(address)": "2845",
								"_contractWhitelist(address)": "2867",
								"_resourceIDToTokenContractAddress(bytes32)": "2884",
								"_tokenContractAddressToResourceID(address)": "2880",
								"setBurnable(address)": "infinite",
								"setResource(bytes32,address)": "infinite",
								"withdraw(bytes)": "infinite"
							},
							"internal": {
								"_onlyBridge()": "infinite",
								"_setBurnable(address)": "infinite",
								"_setResource(bytes32,address)": "70925"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1062,
									"end": 1075,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1045,
									"end": 1075,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 970,
									"end": 1082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2857,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa01a946fe143ec1555523a40d939bea4bd7ceb82779c19ac99dfbfbd981369464736f6c634300080b0033",
									".code": [
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "6A70D081"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "6A70D081"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "7F79BEA8"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "B8FA3736"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "C8BA6C87"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "7B7ED99"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "968F264"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "A6D55D8"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "318C136E"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 2857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 836,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 836,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 836,
											"end": 849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 849,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 836,
											"end": 849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2267,
											"end": 2282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2170,
											"end": 2290,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2296,
											"end": 2361,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 408,
											"end": 477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 477,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 318,
											"end": 357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 318,
											"end": 357,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 755,
											"end": 797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 755,
											"end": 797,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 836,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 836,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 836,
											"end": 849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 849,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 836,
											"end": 849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1880,
											"end": 1921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1921,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1880,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1774,
											"end": 1928,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 597,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1088,
											"end": 1212,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1088,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1152,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1134,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1212,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2655,
											"end": 2855,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2655,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2729,
											"end": 2764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2721,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2815,
											"end": 2824,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2655,
											"end": 2855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2655,
											"end": 2855,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2649,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2367,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2501,
											"end": 2516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2579,
											"end": 2589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2600,
											"end": 2618,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2600,
											"end": 2642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2649,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1293,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1176,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 1416,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1299,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1410,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1510,
											"end": 1517,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1498,
											"end": 1503,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1530,
											"end": 1710,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1530,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1575,
											"end": 1576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1679,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1665,
											"end": 1680,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1703,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1704,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1997,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1716,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1821,
											"end": 1825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1799,
											"end": 1826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1799,
											"end": 1826,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1799,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1787,
											"end": 1827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 1936,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1893,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1912,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1937,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1960,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1872,
											"end": 1960,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1960,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1872,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1991,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1997,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2003,
											"end": 2132,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2003,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2037,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2113,
											"end": 2119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2093,
											"end": 2126,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2126,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2093,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2132,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2138,
											"end": 2445,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2138,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2308,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2275,
											"end": 2331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2311,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2311,
											"end": 2329,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2311,
											"end": 2329,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2311,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2275,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2437,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2427,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2445,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2451,
											"end": 2605,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2451,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2512,
											"end": 2542,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2594,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2586,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2611,
											"end": 3021,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2611,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2729,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2770,
											"end": 2776,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2729,
											"end": 2777,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2729,
											"end": 2777,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2729,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2787,
											"end": 2808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2880,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2866,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2856,
											"end": 2881,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2965,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2853,
											"end": 2965,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2965,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2853,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2974,
											"end": 3015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2974,
											"end": 3015,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2974,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 3021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 3021,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 3021,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 3021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 3021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 3021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 3021,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3040,
											"end": 3378,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3040,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3129,
											"end": 3135,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3125,
											"end": 3142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3148,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3111,
											"end": 3233,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3152,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3152,
											"end": 3231,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3152,
											"end": 3231,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3152,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3233,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3111,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3360,
											"end": 3366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3353,
											"end": 3357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3345,
											"end": 3351,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3341,
											"end": 3358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3294,
											"end": 3372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3294,
											"end": 3372,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3294,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3285,
											"end": 3372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3378,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3378,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3384,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3384,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3503,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3498,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 3499,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3504,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3588,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3469,
											"end": 3588,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3507,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3507,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3507,
											"end": 3586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3507,
											"end": 3586,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3507,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3588,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3469,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3655,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3658,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3703,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3677,
											"end": 3683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3674,
											"end": 3704,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3788,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3671,
											"end": 3788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3707,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3707,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3707,
											"end": 3786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3707,
											"end": 3786,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3707,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3671,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3866,
											"end": 3873,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3863,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3855,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3812,
											"end": 3874,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3812,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3891,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3891,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3897,
											"end": 3974,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3897,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 3974,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 3974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 3974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3897,
											"end": 3974,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3980,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3980,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4071,
											"end": 4076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4053,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4053,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4053,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4043,
											"end": 4078,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4033,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4033,
											"end": 4096,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4082,
											"end": 4094,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4033,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4033,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4102,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4102,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4108,
											"end": 4247,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4108,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4170,
											"end": 4199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4170,
											"end": 4199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4235,
											"end": 4240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4208,
											"end": 4241,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4208,
											"end": 4241,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4208,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4247,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4108,
											"end": 4247,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4253,
											"end": 4582,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4253,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4312,
											"end": 4318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4361,
											"end": 4363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4349,
											"end": 4358,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4359,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4332,
											"end": 4364,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4329,
											"end": 4448,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4329,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4329,
											"end": 4448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4367,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4367,
											"end": 4446,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4367,
											"end": 4446,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 4367,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4329,
											"end": 4448,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4329,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4557,
											"end": 4564,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4548,
											"end": 4554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4546,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4533,
											"end": 4555,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4512,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4582,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4582,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4588,
											"end": 4706,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4588,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4693,
											"end": 4698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4675,
											"end": 4699,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4675,
											"end": 4699,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4675,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4670,
											"end": 4673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4663,
											"end": 4700,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4588,
											"end": 4706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4588,
											"end": 4706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4588,
											"end": 4706,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4712,
											"end": 4934,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4712,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 4809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4820,
											"end": 4846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4924,
											"end": 4925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4926,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4856,
											"end": 4927,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4856,
											"end": 4927,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4856,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4934,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4934,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4940,
											"end": 5030,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4940,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4974,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5023,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5024,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4992,
											"end": 5024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4992,
											"end": 5024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5030,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5030,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 5030,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5036,
											"end": 5145,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5036,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5132,
											"end": 5137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5117,
											"end": 5138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5117,
											"end": 5138,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5117,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5036,
											"end": 5145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5036,
											"end": 5145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5036,
											"end": 5145,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5151,
											"end": 5361,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5151,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5238,
											"end": 5242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5253,
											"end": 5279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5289,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5351,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5349,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5353,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5289,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5289,
											"end": 5354,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5289,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5289,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5151,
											"end": 5361,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5151,
											"end": 5361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5151,
											"end": 5361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5151,
											"end": 5361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5151,
											"end": 5361,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5367,
											"end": 5841,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5367,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5478,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5467,
											"end": 5490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5495,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5498,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5498,
											"end": 5577,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5498,
											"end": 5577,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5498,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5460,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5688,
											"end": 5695,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5643,
											"end": 5696,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5643,
											"end": 5696,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5643,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5633,
											"end": 5696,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5633,
											"end": 5696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5745,
											"end": 5747,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5771,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5816,
											"end": 5823,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5813,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5805,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5792,
											"end": 5814,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5771,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5771,
											"end": 5824,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5771,
											"end": 5824,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5771,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5761,
											"end": 5824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5761,
											"end": 5824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5841,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5841,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5841,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5847,
											"end": 5965,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5847,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5934,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5952,
											"end": 5957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5934,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5934,
											"end": 5958,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5934,
											"end": 5958,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5934,
											"end": 5958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5929,
											"end": 5932,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5922,
											"end": 5959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5965,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5971,
											"end": 6193,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5971,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6064,
											"end": 6068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6104,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6091,
											"end": 6100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6079,
											"end": 6105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6079,
											"end": 6105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6115,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6183,
											"end": 6184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6181,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6168,
											"end": 6185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6159,
											"end": 6165,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6115,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6115,
											"end": 6186,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6115,
											"end": 6186,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6115,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 6193,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 6193,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 6193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 6193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5971,
											"end": 6193,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6199,
											"end": 6368,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6199,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6283,
											"end": 6294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6315,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6305,
											"end": 6324,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6361,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6355,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6333,
											"end": 6362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6368,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6199,
											"end": 6368,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6374,
											"end": 6554,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6374,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6546,
											"name": "PUSH",
											"source": 2,
											"value": "73656E646572206D7573742062652062726964676520636F6E74726163740000"
										},
										{
											"begin": 6510,
											"end": 6511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6498,
											"end": 6512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6491,
											"end": 6547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6554,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6560,
											"end": 6926,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6560,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6723,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6787,
											"end": 6789,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 6782,
											"end": 6785,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6723,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6723,
											"end": 6790,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6723,
											"end": 6790,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6723,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6716,
											"end": 6790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6716,
											"end": 6790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6799,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6888,
											"end": 6891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6799,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6799,
											"end": 6892,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6799,
											"end": 6892,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6799,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6917,
											"end": 6919,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6915,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6908,
											"end": 6920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6901,
											"end": 6920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6901,
											"end": 6920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6926,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6926,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6932,
											"end": 7351,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 6932,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7138,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7125,
											"end": 7134,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7121,
											"end": 7139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 7139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7113,
											"end": 7139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7185,
											"end": 7194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7175,
											"end": 7195,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7169,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7156,
											"end": 7173,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7149,
											"end": 7196,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7213,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 7339,
											"end": 7343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7213,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 7213,
											"end": 7344,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7213,
											"end": 7344,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 7213,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6932,
											"end": 7351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6932,
											"end": 7351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6932,
											"end": 7351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6932,
											"end": 7351,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7357,
											"end": 7580,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7357,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7531,
											"name": "PUSH",
											"source": 2,
											"value": "70726F766964656420636F6E7472616374206973206E6F742077686974656C69"
										},
										{
											"begin": 7493,
											"end": 7494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7481,
											"end": 7495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7474,
											"end": 7532,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7566,
											"end": 7572,
											"name": "PUSH",
											"source": 2,
											"value": "7374656400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7561,
											"end": 7563,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7559,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7549,
											"end": 7564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7542,
											"end": 7573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7357,
											"end": 7580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7357,
											"end": 7580,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7728,
											"end": 7731,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 7813,
											"end": 7815,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7808,
											"end": 7811,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 7749,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7742,
											"end": 7816,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7742,
											"end": 7816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7914,
											"end": 7917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7825,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7943,
											"end": 7945,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7938,
											"end": 7941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7934,
											"end": 7946,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7927,
											"end": 7946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7927,
											"end": 7946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7586,
											"end": 7952,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7958,
											"end": 8377,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 7958,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8124,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8164,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8151,
											"end": 8160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8147,
											"end": 8165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8211,
											"end": 8220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8205,
											"end": 8209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8201,
											"end": 8221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8197,
											"end": 8198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8186,
											"end": 8195,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8239,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 8365,
											"end": 8369,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8239,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 8239,
											"end": 8370,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8239,
											"end": 8370,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 8239,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 8377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 8377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 8377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 8377,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_bridgeAddress()": "318c136e",
							"_burnList(address)": "6a70d081",
							"_contractWhitelist(address)": "7f79bea8",
							"_resourceIDToTokenContractAddress(bytes32)": "0a6d55d8",
							"_tokenContractAddressToResourceID(address)": "c8ba6c87",
							"setBurnable(address)": "07b7ed99",
							"setResource(bytes32,address)": "b8fa3736",
							"withdraw(bytes)": "0968f264"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_bridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_burnList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_contractWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_resourceIDToTokenContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_tokenContractAddressToResourceID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setBurnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"bridgeAddress\":\"Contract address of previously deployed Bridge.\"}},\"setBurnable(address)\":{\"params\":{\"contractAddress\":\"Address of contract to be used when making or executing deposits.\"}},\"setResource(bytes32,address)\":{\"params\":{\"contractAddress\":\"Address of contract to be called when a deposit is made and a deposited is executed.\",\"resourceID\":\"ResourceID to be used when making deposits.\"}},\"withdraw(bytes)\":{\"params\":{\"data\":\"ABI-encoded withdrawal params relevant to the handler.\"}}},\"title\":\"Function used across handler contracts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setBurnable(address)\":{\"notice\":\"First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}] to true.\"},\"setResource(bytes32,address)\":{\"notice\":\"First verifies {_resourceIDToContractAddress}[{resourceID}] and {_contractAddressToResourceID}[{contractAddress}] are not already set, then sets {_resourceIDToContractAddress} with {contractAddress}, {_contractAddressToResourceID} with {resourceID}, and {_contractWhitelist} to true for {contractAddress}.\"},\"withdraw(bytes)\":{\"notice\":\"Withdraw funds from ERC safes.\"}},\"notice\":\"This contract is intended to be used with the Bridge contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":\"HandlerHelpers\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sygma-solidity/contracts/handlers/HandlerHelpers.sol\":{\"keccak256\":\"0xf3c9052efccc0cb34156e594e61191491c847273308854802d88e85fd130807f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://894174133e2c5af6f5d897fcb476b47d3f8d21e829c21ec389e542ce4201b839\",\"dweb:/ipfs/QmSx5RychyrVZ51qJcWUs7S6vFHqZ4LncLz1VvpaRdZYeT\"]},\"sygma-solidity/contracts/interfaces/IERCHandler.sol\":{\"keccak256\":\"0x714f0913ed27ed7b98efe1b368a79ae57bb61bbce5b5983f837a0b24dc014649\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1b394cf6f1b2b775207d8401c19701104585f39732e16c0de2f1ad3ff22a757c\",\"dweb:/ipfs/QmQFY1fPBxjWgswnWMBs3QxcukxS2jQofe7i8VgnCiWhYY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "sygma-solidity/contracts/handlers/HandlerHelpers.sol:HandlerHelpers",
								"label": "_resourceIDToTokenContractAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_address)"
							},
							{
								"astId": 15,
								"contract": "sygma-solidity/contracts/handlers/HandlerHelpers.sol:HandlerHelpers",
								"label": "_tokenContractAddressToResourceID",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bytes32)"
							},
							{
								"astId": 19,
								"contract": "sygma-solidity/contracts/handlers/HandlerHelpers.sol:HandlerHelpers",
								"label": "_contractWhitelist",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 23,
								"contract": "sygma-solidity/contracts/handlers/HandlerHelpers.sol:HandlerHelpers",
								"label": "_burnList",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_bytes32,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setBurnable(address)": {
								"notice": "First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}] to true."
							},
							"setResource(bytes32,address)": {
								"notice": "First verifies {_resourceIDToContractAddress}[{resourceID}] and {_contractAddressToResourceID}[{contractAddress}] are not already set, then sets {_resourceIDToContractAddress} with {contractAddress}, {_contractAddressToResourceID} with {resourceID}, and {_contractWhitelist} to true for {contractAddress}."
							},
							"withdraw(bytes)": {
								"notice": "Withdraw funds from ERC safes."
							}
						},
						"notice": "This contract is intended to be used with the Bridge contract.",
						"version": 1
					}
				}
			},
			"sygma-solidity/contracts/interfaces/IERCHandler.sol": {
				"IERCHandler": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "setBurnable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "resourceID",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "setResource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "ChainSafe Systems.",
						"kind": "dev",
						"methods": {
							"setBurnable(address)": {
								"params": {
									"contractAddress": "Address of contract to be used when making or executing deposits."
								}
							},
							"setResource(bytes32,address)": {
								"params": {
									"contractAddress": "Address of contract to be called when a deposit is made and a deposited is executed.",
									"resourceID": "ResourceID to be used when making deposits."
								}
							},
							"withdraw(bytes)": {
								"params": {
									"data": "ABI-encoded withdrawal params relevant to the handler."
								}
							}
						},
						"title": "Interface to be used with handlers that support ERC20s and ERC721s.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setBurnable(address)": "07b7ed99",
							"setResource(bytes32,address)": "b8fa3736",
							"withdraw(bytes)": "0968f264"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setBurnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"kind\":\"dev\",\"methods\":{\"setBurnable(address)\":{\"params\":{\"contractAddress\":\"Address of contract to be used when making or executing deposits.\"}},\"setResource(bytes32,address)\":{\"params\":{\"contractAddress\":\"Address of contract to be called when a deposit is made and a deposited is executed.\",\"resourceID\":\"ResourceID to be used when making deposits.\"}},\"withdraw(bytes)\":{\"params\":{\"data\":\"ABI-encoded withdrawal params relevant to the handler.\"}}},\"title\":\"Interface to be used with handlers that support ERC20s and ERC721s.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setBurnable(address)\":{\"notice\":\"Marks {contractAddress} as mintable/burnable.\"},\"setResource(bytes32,address)\":{\"notice\":\"Correlates {resourceID} with {contractAddress}.\"},\"withdraw(bytes)\":{\"notice\":\"Withdraw funds from ERC safes.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sygma-solidity/contracts/interfaces/IERCHandler.sol\":\"IERCHandler\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sygma-solidity/contracts/interfaces/IERCHandler.sol\":{\"keccak256\":\"0x714f0913ed27ed7b98efe1b368a79ae57bb61bbce5b5983f837a0b24dc014649\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1b394cf6f1b2b775207d8401c19701104585f39732e16c0de2f1ad3ff22a757c\",\"dweb:/ipfs/QmQFY1fPBxjWgswnWMBs3QxcukxS2jQofe7i8VgnCiWhYY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setBurnable(address)": {
								"notice": "Marks {contractAddress} as mintable/burnable."
							},
							"setResource(bytes32,address)": {
								"notice": "Correlates {resourceID} with {contractAddress}."
							},
							"withdraw(bytes)": {
								"notice": "Withdraw funds from ERC safes."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> sygma-solidity/contracts/handlers/HandlerHelpers.sol:34:5:\n   |\n34 |     constructor(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1082,
					"file": "sygma-solidity/contracts/handlers/HandlerHelpers.sol",
					"start": 970
				},
				"type": "Warning"
			}
		],
		"sources": {
			"sygma-solidity/contracts/handlers/HandlerHelpers.sol": {
				"ast": {
					"absolutePath": "sygma-solidity/contracts/handlers/HandlerHelpers.sol",
					"exportedSymbols": {
						"HandlerHelpers": [
							137
						],
						"IERCHandler": [
							161
						]
					},
					"id": 138,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:0"
						},
						{
							"absolutePath": "sygma-solidity/contracts/interfaces/IERCHandler.sol",
							"file": "../interfaces/IERCHandler.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 138,
							"sourceUnit": 162,
							"src": "67:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERCHandler",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 161,
										"src": "300:11:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "300:11:0"
								}
							],
							"canonicalName": "HandlerHelpers",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "108:164:0",
								"text": "@title Function used across handler contracts.\n@author ChainSafe Systems.\n@notice This contract is intended to be used with the Bridge contract."
							},
							"fullyImplemented": true,
							"id": 137,
							"linearizedBaseContracts": [
								137,
								161
							],
							"name": "HandlerHelpers",
							"nameLocation": "282:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "318c136e",
									"id": 7,
									"mutability": "immutable",
									"name": "_bridgeAddress",
									"nameLocation": "343:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "318:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a6d55d8",
									"id": 11,
									"mutability": "mutable",
									"name": "_resourceIDToTokenContractAddress",
									"nameLocation": "444:33:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "408:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
										"typeString": "mapping(bytes32 => address)"
									},
									"typeName": {
										"id": 10,
										"keyType": {
											"id": 8,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "417:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "408:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
											"typeString": "mapping(bytes32 => address)"
										},
										"valueType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "428:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8ba6c87",
									"id": 15,
									"mutability": "mutable",
									"name": "_tokenContractAddressToResourceID",
									"nameLocation": "564:33:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "528:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
										"typeString": "mapping(address => bytes32)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "537:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "528:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
											"typeString": "mapping(address => bytes32)"
										},
										"valueType": {
											"id": 13,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "548:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7f79bea8",
									"id": 19,
									"mutability": "mutable",
									"name": "_contractWhitelist",
									"nameLocation": "685:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "652:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "661:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "652:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 17,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "672:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6a70d081",
									"id": 23,
									"mutability": "mutable",
									"name": "_burnList",
									"nameLocation": "788:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 137,
									"src": "755:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "764:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "755:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 21,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "775:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "826:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_onlyBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "836:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "836:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "836:13:0"
											},
											{
												"id": 28,
												"nodeType": "PlaceholderStatement",
												"src": "859:1:0"
											}
										]
									},
									"id": 30,
									"name": "onlyBridge",
									"nameLocation": "813:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:2:0"
									},
									"src": "804:63:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "1035:47:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "_bridgeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1045:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 37,
														"name": "bridgeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1062:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1045:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1045:30:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "877:88:0",
										"text": "@param bridgeAddress Contract address of previously deployed Bridge."
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "bridgeAddress",
												"nameLocation": "1008:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "991:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:46:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:0:0"
									},
									"scope": 137,
									"src": "970:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1124:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 45,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1142:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1142:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 47,
																"name": "_bridgeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1156:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1142:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73656e646572206d7573742062652062726964676520636f6e7472616374",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1172:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
																"typeString": "literal_string \"sender must be bridge contract\""
															},
															"value": "sender must be bridge contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
																"typeString": "literal_string \"sender must be bridge contract\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1134:71:0"
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyBridge",
									"nameLocation": "1097:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:0"
									},
									"scope": 137,
									"src": "1088:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										148
									],
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1869:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 65,
															"name": "resourceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1893:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 66,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "1905:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 64,
														"name": "_setResource",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1880:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1880:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "1880:41:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1218:551:0",
										"text": "@notice First verifies {_resourceIDToContractAddress}[{resourceID}] and\n{_contractAddressToResourceID}[{contractAddress}] are not already set,\nthen sets {_resourceIDToContractAddress} with {contractAddress},\n{_contractAddressToResourceID} with {resourceID},\nand {_contractWhitelist} to true for {contractAddress}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed."
									},
									"functionSelector": "b8fa3736",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 62,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 61,
												"name": "onlyBridge",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 30,
												"src": "1858:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1858:10:0"
										}
									],
									"name": "setResource",
									"nameLocation": "1783:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 60,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1849:8:0"
									},
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "resourceID",
												"nameLocation": "1803:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1795:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 55,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "1823:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1815:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1794:45:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:0:0"
									},
									"scope": 137,
									"src": "1774:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										154
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2244:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "2267:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 79,
														"name": "_setBurnable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "2254:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2254:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "2254:29:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1934:231:0",
										"text": "@notice First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}]\nto true.\n@param contractAddress Address of contract to be used when making or executing deposits."
									},
									"functionSelector": "07b7ed99",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 77,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 76,
												"name": "onlyBridge",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 30,
												"src": "2234:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2234:10:0"
										}
									],
									"name": "setBurnable",
									"nameLocation": "2179:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 75,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2225:8:0"
									},
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "2199:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2191:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:25:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:0:0"
									},
									"scope": 137,
									"src": "2170:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										160
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2359:2:0",
										"statements": []
									},
									"functionSelector": "0968f264",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2305:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 88,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2350:8:0"
									},
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2327:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2314:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 85,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2314:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:19:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2359:0:0"
									},
									"scope": 137,
									"src": "2296:65:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2443:206:0",
										"statements": [
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 98,
															"name": "_resourceIDToTokenContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "2453:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
																"typeString": "mapping(bytes32 => address)"
															}
														},
														"id": 100,
														"indexExpression": {
															"id": 99,
															"name": "resourceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2487:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2453:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 101,
														"name": "contractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2501:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2453:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2453:63:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 104,
															"name": "_tokenContractAddressToResourceID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "2526:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
																"typeString": "mapping(address => bytes32)"
															}
														},
														"id": 106,
														"indexExpression": {
															"id": 105,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2560:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2526:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 107,
														"name": "resourceID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "2579:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2526:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "2526:63:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 110,
															"name": "_contractWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2600:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 112,
														"indexExpression": {
															"id": 111,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "2619:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2600:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2638:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2600:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "2600:42:0"
											}
										]
									},
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setResource",
									"nameLocation": "2376:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "resourceID",
												"nameLocation": "2397:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2389:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "2417:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2409:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:45:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2443:0:0"
									},
									"scope": 137,
									"src": "2367:282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "2711:144:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 123,
																"name": "_contractWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2729:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 125,
															"indexExpression": {
																"id": 124,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2748:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2729:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "70726f766964656420636f6e7472616374206973206e6f742077686974656c6973746564",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2766:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
																"typeString": "literal_string \"provided contract is not whitelisted\""
															},
															"value": "provided contract is not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
																"typeString": "literal_string \"provided contract is not whitelisted\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2721:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2721:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2721:84:0"
											},
											{
												"expression": {
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 129,
															"name": "_burnList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2815:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 131,
														"indexExpression": {
															"id": 130,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2825:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2815:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2844:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2815:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "2815:33:0"
											}
										]
									},
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBurnable",
									"nameLocation": "2664:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "2685:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "2677:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:25:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2711:0:0"
									},
									"scope": 137,
									"src": "2655:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 138,
							"src": "273:2584:0",
							"usedErrors": []
						}
					],
					"src": "42:2816:0"
				},
				"id": 0
			},
			"sygma-solidity/contracts/interfaces/IERCHandler.sol": {
				"ast": {
					"absolutePath": "sygma-solidity/contracts/interfaces/IERCHandler.sol",
					"exportedSymbols": {
						"IERCHandler": [
							161
						]
					},
					"id": 162,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 139,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERCHandler",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 140,
								"nodeType": "StructuredDocumentation",
								"src": "67:117:1",
								"text": "@title Interface to be used with handlers that support ERC20s and ERC721s.\n@author ChainSafe Systems."
							},
							"fullyImplemented": false,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "IERCHandler",
							"nameLocation": "195:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "213:261:1",
										"text": "@notice Correlates {resourceID} with {contractAddress}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed."
									},
									"functionSelector": "b8fa3736",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setResource",
									"nameLocation": "488:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "resourceID",
												"nameLocation": "508:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "500:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "528:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "520:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:45:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "553:0:1"
									},
									"scope": 161,
									"src": "479:75:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "559:170:1",
										"text": "@notice Marks {contractAddress} as mintable/burnable.\n@param contractAddress Address of contract to be used when making or executing deposits."
									},
									"functionSelector": "07b7ed99",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBurnable",
									"nameLocation": "743:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "763:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "755:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:25:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:0:1"
									},
									"scope": 161,
									"src": "734:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "795:133:1",
										"text": "@notice Withdraw funds from ERC safes.\n@param data ABI-encoded withdrawal params relevant to the handler."
									},
									"functionSelector": "0968f264",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "942:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "964:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "951:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "951:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:19:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:1"
									},
									"scope": 161,
									"src": "933:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 162,
							"src": "185:796:1",
							"usedErrors": []
						}
					],
					"src": "42:940:1"
				},
				"id": 1
			}
		}
	}
}